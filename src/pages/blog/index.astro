---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

// 型安全な画像URL抽出関数
function getValidImageSrc(val: unknown): string {
  return typeof val === "string" && val.length > 0 ? val : "";
}

const rawPosts = await getCollection("blog");

async function fetchOGP(url: string) {
  try {
    const res = await fetch(url);
    const html = await res.text();
    const ogImage = html.match(
      /<meta property="og:image" content="([^"]+)"/,
    )?.[1];
    const ogTitle = html.match(
      /<meta property="og:title" content="([^"]+)"/,
    )?.[1];
    return { ogImage, ogTitle };
  } catch {
    return {};
  }
}

const posts = await Promise.all(
  rawPosts.map(async (post) => {
    if (post.data.externalUrl) {
      const ogp = await fetchOGP(post.data.externalUrl);
      return {
        ...post,
        data: {
          ...post.data,
          ogImage: ogp.ogImage,
          ogTitle: ogp.ogTitle,
        },
      };
    }
    return post;
  }),
);

posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<BaseLayout
  title={"ブログ | けんたろうのサイト"}
  description={SITE_DESCRIPTION}
>
  <section class="flex flex-col gap-5">
    <h1 class="border-b-2 border-dashed border-primary pb-2 text-4xl">
      ブログ
    </h1>
    <ul class="flex list-none flex-wrap justify-center gap-4">
      {
        posts.map((post, idx) => {
          const isExternal = !!post.data.externalUrl;
          const imageSrc = isExternal
            ? getValidImageSrc((post.data as any).ogImage)
            : getValidImageSrc(post.data.heroImage);
          const imageAlt = isExternal
            ? `「${(post.data as any).ogTitle ?? post.data.title}」のサムネイル`
            : `「${post.data.title}」のサムネイル`;
          const title = isExternal
            ? ((post.data as any).ogTitle ?? post.data.title)
            : post.data.title;
          const siteName = isExternal
            ? typeof post.data.externalUrl === "string"
              ? new URL(post.data.externalUrl).host
              : ""
            : "kentaro1043.com";
          return (
            <li class="w-96">
              <a
                href={isExternal ? post.data.externalUrl : `/blog/${post.id}/`}
                class="flex flex-col gap-2 rounded-2xl border-2 border-primary p-2 transition-colors hover:opacity-60"
                target={isExternal ? "_blank" : undefined}
                rel={isExternal ? "noopener noreferrer" : undefined}
              >
                <div class="flex flex-shrink-0 justify-center">
                  {isExternal && imageSrc ? (
                    <div class="h-36 w-64">
                      <img
                        width={720}
                        height={360}
                        src={imageSrc}
                        alt={imageAlt}
                        class="h-full w-full rounded-xl object-cover"
                        loading="eager"
                      />
                    </div>
                  ) : null}
                  {!isExternal && post.data.heroImage ? (
                    <div class="h-36 w-64">
                      <Image
                        width={720}
                        height={360}
                        src={post.data.heroImage}
                        alt={imageAlt}
                        class="h-full w-full rounded-xl object-cover"
                        loading={"eager"}
                      />
                    </div>
                  ) : null}
                </div>
                <div>
                  <h4 class="text-md leading-tight">{title}</h4>
                  <p class="mt-1 text-sm opacity-75">
                    <span class="inline-flex items-center gap-2">
                      <span class="align-middle">{siteName}</span>
                      {isExternal ? (
                        <span
                          class="inline-flex items-center"
                          aria-hidden="true"
                        >
                          <Icon
                            name="fa6-solid:window-restore"
                            class="h-3 w-3"
                          />
                        </span>
                      ) : null}
                    </span>
                  </p>
                  <p class="mt-1 text-xs opacity-75">
                    <FormattedDate date={post.data.pubDate} />
                  </p>
                </div>
              </a>
            </li>
          );
        })
      }
    </ul>
  </section>
</BaseLayout>
