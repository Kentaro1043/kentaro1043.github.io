---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import { Image } from "astro:assets";

const rawPosts = await getCollection("blog");

async function fetchOGP(url: string) {
  try {
    const res = await fetch(url);
    const html = await res.text();
    const ogImage = html.match(
      /<meta property="og:image" content="([^"]+)"/,
    )?.[1];
    const ogTitle = html.match(
      /<meta property="og:title" content="([^"]+)"/,
    )?.[1];
    return { ogImage, ogTitle };
  } catch {
    return {};
  }
}

const posts = await Promise.all(
  rawPosts.map(async (post) => {
    if (post.data.externalUrl) {
      const ogp = await fetchOGP(post.data.externalUrl);
      return {
        ...post,
        data: {
          ...post.data,
          ogImage: ogp.ogImage,
          ogTitle: ogp.ogTitle,
        },
      };
    }
    return post;
  }),
);

posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="flex min-h-screen flex-col">
    <Header />
    <main
      class="flex flex-1 flex-col gap-8 px-8 py-6 md:px-36 md:py-16 lg:px-80 lg:py-20"
    >
      <section class="flex flex-col gap-5">
        <h1 class="border-b-2 border-dashed border-primary pb-2 text-4xl">
          ブログ
        </h1>
        <ul class="flex list-none flex-wrap gap-4">
          {
            posts.map((post, idx) => (
              <li class="w-full xl:w-[calc(50%-16px)]">
                <a
                  href={
                    post.data.externalUrl
                      ? post.data.externalUrl
                      : `/blog/${post.id}/`
                  }
                  class="flex flex-col gap-2 rounded-2xl border-2 border-primary p-2 transition-colors hover:bg-primary hover:text-primary-content"
                  target={post.data.externalUrl ? "_blank" : undefined}
                  rel={
                    post.data.externalUrl ? "noopener noreferrer" : undefined
                  }
                >
                  {post.data.externalUrl ? (
                    <>
                      {(post.data as any).ogImage && (
                        <Image
                          width={720}
                          height={360}
                          src={(post.data as any).ogImage}
                          alt={`「${(post.data as any).ogTitle ?? post.data.title}」のサムネイル`}
                          class="rounded-xl"
                          loading={"eager"}
                        />
                      )}
                      <div>
                        <h4 class="text-lg leading-tight">
                          {(post.data as any).ogTitle ?? post.data.title}
                        </h4>
                        {post.data.externalUrl && (
                          <p class="mt-1 text-sm break-all opacity-75">
                            {new URL(post.data.externalUrl).host}
                          </p>
                        )}
                        <p class="mt-1 text-sm opacity-75">
                          <FormattedDate date={post.data.pubDate} />
                        </p>
                      </div>
                    </>
                  ) : (
                    <>
                      {post.data.heroImage && (
                        <Image
                          width={720}
                          height={360}
                          src={post.data.heroImage}
                          alt={`「${post.data.title}」のサムネイル`}
                          class="rounded-xl"
                          loading={"eager"}
                        />
                      )}
                      <h4 class="text-lg leading-tight">{post.data.title}</h4>
                      <p class="text-sm opacity-75">
                        <FormattedDate date={post.data.pubDate} />
                      </p>
                    </>
                  )}
                </a>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
